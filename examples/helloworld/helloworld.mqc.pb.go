// Code generated by protoc-gen-mqc. DO NOT EDIT.
// versions:
// protoc-gen-go-mqc v1.0.0

package helloworld

import (
	"context"
	"fmt"
	"github.com/srand/mqc"
)

type GreeterClient interface {
	SayHello(ctx context.Context, req *HelloRequest) (*HelloReply, error)
}

type GreeterServer interface {
	SayHello(req *HelloRequest) (*HelloReply, error)
}

type greeterClient struct {
	conn mqc.Conn
}

func NewGreeterClient(conn mqc.Conn) *greeterClient {
	return &greeterClient{conn: conn}
}

func (c *greeterClient) SayHello(ctx context.Context, req *HelloRequest) (*HelloReply, error) {
	return mqc.Rpc[HelloRequest, HelloReply](ctx, c.conn, mqc.Method("Greeter/SayHello"), req)
}

type UnimplementedGreeterServer struct{}

func (s *UnimplementedGreeterServer) SayHello(req *HelloRequest) (*HelloReply, error) {
	return nil, fmt.Errorf("method SayHello not implemented")
}

func RegisterGreeterServer(conn mqc.Conn, server GreeterServer) {
	conn.RegisterHandler("Greeter/SayHello", func(call mqc.Call) error {
		return mqc.RpcServer(call, conn.Serializer(), func(req *HelloRequest) (*HelloReply, error) {
			return server.SayHello(req)
		})
	})
}
