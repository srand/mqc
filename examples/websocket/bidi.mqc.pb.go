// Code generated by protoc-gen-mqc. DO NOT EDIT.
// versions:
// protoc-gen-go-mqc v1.0.0

package websocket

import (
	"context"
	"fmt"
	"github.com/srand/mqc"
)

type IncrementerClient interface {
	Increment(ctx context.Context) (mqc.BidiStreamClient[Integer, Integer], error)
}

type IncrementerServer interface {
	Increment(stream mqc.BidiStreamServer[Integer, Integer]) error
}

type incrementerClient struct {
	transport mqc.Transport
}

func NewIncrementerClient(transport mqc.Transport) *incrementerClient {
	return &incrementerClient{transport: transport}
}

func (c *incrementerClient) Increment(ctx context.Context) (mqc.BidiStreamClient[Integer, Integer], error) {
	return mqc.NewBidiStreamClient[Integer, Integer](ctx, c.transport, mqc.Method("Incrementer/Increment"))
}

type UnimplementedIncrementerServer struct{}

func (s *UnimplementedIncrementerServer) Increment(stream mqc.BidiStreamServer[Integer, Integer]) error {
	return fmt.Errorf("method Increment not implemented")
}

func RegisterIncrementerServer(transport mqc.Transport, server IncrementerServer) {
	transport.RegisterHandler("Incrementer/Increment", func(conn mqc.Conn) error {
		stream, err := mqc.NewBidiStreamServer[Integer, Integer](transport, conn)
		if err != nil {
			return err
		}
		return server.Increment(stream)
	})
}
